{"ast":null,"code":"var _jsxFileName = \"/Users/yohanflorez/Documents/Dev/Yohan/workana.react.test2/src/search/components/Search.tsx\";\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Typography from \"@mui/material/Typography\";\nimport Paper from '@mui/material/Paper';\nimport TextField from \"@mui/material/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'start',\n  color: theme.palette.text.secondary,\n  margin: theme.spacing(3)\n}));\n_c = Item;\nexport const Search = ({\n  callback,\n  minChars = 1\n}) => {\n  const onSearchType = e => {\n    const term = e.target.value;\n    if (term.length >= minChars) {\n      callback(term);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Item, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      className: \"search-title\",\n      children: \"Search for a city\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"search-input\",\n      inputProps: {\n        'data-testid': 'search-input'\n      },\n      className: \"text-input\",\n      type: \"text\",\n      placeholder: \"Search by city name\",\n      onChange: onSearchType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Search;\nvar _c, _c2;\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"Search\");","map":{"version":3,"names":["React","styled","Typography","Paper","TextField","jsxDEV","_jsxDEV","Item","theme","backgroundColor","palette","mode","typography","body2","padding","spacing","textAlign","color","text","secondary","margin","_c","Search","callback","minChars","onSearchType","e","term","target","value","length","children","variant","className","fileName","_jsxFileName","lineNumber","columnNumber","id","inputProps","type","placeholder","onChange","_c2","$RefreshReg$"],"sources":["/Users/yohanflorez/Documents/Dev/Yohan/workana.react.test2/src/search/components/Search.tsx"],"sourcesContent":["import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Typography from \"@mui/material/Typography\";\nimport Paper from '@mui/material/Paper';\nimport TextField from \"@mui/material/TextField\";\n\ninterface SearchProps {\n  callback: (term: string) => void;\n  minChars?: number;\n}\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'start',\n  color: theme.palette.text.secondary,\n  margin: theme.spacing(3),\n}));\n\nexport const Search = ({ callback, minChars = 1 }: SearchProps) => {\n\n  const onSearchType = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const term = e.target.value;\n    if (term.length >= minChars) {\n      callback(term);\n    }\n  }\n\n  return (\n    <Item>\n      <Typography variant=\"h6\" className=\"search-title\">Search for a city</Typography>\n      <TextField\n        id=\"search-input\"\n        inputProps={{\n          'data-testid': 'search-input'\n        }}\n        className=\"text-input\"\n        type=\"text\"\n        placeholder=\"Search by city name\"\n        onChange={onSearchType}\n      />\n    </Item>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOhD,MAAMC,IAAI,GAAGN,MAAM,CAACE,KAAK,CAAC,CAAC,CAAC;EAAEK;AAAM,CAAC,MAAM;EACzCC,eAAe,EAAED,KAAK,CAACE,OAAO,CAACC,IAAI,KAAK,MAAM,GAAG,SAAS,GAAG,MAAM;EACnE,GAAGH,KAAK,CAACI,UAAU,CAACC,KAAK;EACzBC,OAAO,EAAEN,KAAK,CAACO,OAAO,CAAC,CAAC,CAAC;EACzBC,SAAS,EAAE,OAAO;EAClBC,KAAK,EAAET,KAAK,CAACE,OAAO,CAACQ,IAAI,CAACC,SAAS;EACnCC,MAAM,EAAEZ,KAAK,CAACO,OAAO,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC;AAACM,EAAA,GAPEd,IAAI;AASV,OAAO,MAAMe,MAAM,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ,GAAG;AAAe,CAAC,KAAK;EAEjE,MAAMC,YAAY,GAAIC,CAAsC,IAAK;IAC/D,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC3B,IAAIF,IAAI,CAACG,MAAM,IAAIN,QAAQ,EAAE;MAC3BD,QAAQ,CAACI,IAAI,CAAC;IAChB;EACF,CAAC;EAED,oBACErB,OAAA,CAACC,IAAI;IAAAwB,QAAA,gBACHzB,OAAA,CAACJ,UAAU;MAAC8B,OAAO,EAAC,IAAI;MAACC,SAAS,EAAC,cAAc;MAAAF,QAAA,EAAC;IAAiB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAChF/B,OAAA,CAACF,SAAS;MACRkC,EAAE,EAAC,cAAc;MACjBC,UAAU,EAAE;QACV,aAAa,EAAE;MACjB,CAAE;MACFN,SAAS,EAAC,YAAY;MACtBO,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,qBAAqB;MACjCC,QAAQ,EAAEjB;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAAAM,GAAA,GAxBYrB,MAAM;AAAA,IAAAD,EAAA,EAAAsB,GAAA;AAAAC,YAAA,CAAAvB,EAAA;AAAAuB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}